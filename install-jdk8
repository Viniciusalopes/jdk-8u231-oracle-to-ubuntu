#!/usr/bin/env bash
# Template orgulhosamente criado por (Shell-Base)

#-----------HEADER-------------------------------------------------------------|
# AUTOR             : Vovolinux <suporte@vovolinux.com.br>
# HOMEPAGE          : https://vovolinux.com.br 
# DATA DE CRIAÇÃO   : 15/12/2019 às 21:07 
# PROGRAMA          : install-jdk8
# VERSÃO            : 1.0.3
# LICENÇA           : MIT - © 2020 - Vovolinux
# PEQUENA DESCRIÇÃO : Instalação do Java SE Development Kit 8 para GNU/Linux
# 
# FONTE: Install Oracle JDK 8 on Linux
#        <https://www.javahelps.com/2015/03/install-oracle-jdk-in-ubuntu.html>
# 
# CHANGELOG :
# 2020-05-01 - v1.0.3 - Vovolinux:
#   - Removida a variável data_arquivo;
#   - Removida a variável data_log;
#   - Alterado o nome do arquivo de log;
#   - Revisão dos comentários de linha;
#   - Incluída a função oferece_download;
#   - Incluída a variável instruc_download;
#   - Incluída a função somente_root;
#   - Incluída a função dependencias;
#   - Movida a variavel distros para a sessão --- VARIÁVEIS ---
#   - Método 'update()' renomeado para 'update_alternatives()'
#
# 2020-04-26 - v1.0.2 - Vovolinux:
#   - Detecção de arquivos 'jdk-8u*-linux-*.tar.gz' no diretório do script.
#   - Detecção automáGica da versão do JDK a ser instalado.
#   - Incluída a opção de continuar mesmo que este script ainda não tenha
#     sido testado com a distribuição atual.
#   - Modularização de funções com scripts do projeto 'shell-util'
#     <https://github.com/Viniciusalopes/shell-util>
#   - Incluída a sessão --- DEPENDÊNCIAS ---
#
# 2019-12-15 - v1.0.1 - Vovolinux:
#   - Melhoria de comentários e aproveitamento de variáveis.
#   - Substituição de 'echo' por 'printf' e 'cat << EOF'.
#
#------------------------------------------------------------------------------|


#--------------------------------- VARIÁVEIS ---------------------------------->

### VARIÁVEIS DO SCRIPT ###

# Autor
autor='Vovolinux'

# Programa
programa='install-jdk8'

# Versão
versao='1.0.2'

# Ano atual
ano=$(date "+%Y")

# Informação de Copyryght
copyright="© ${ano} - ${autor}"

# Separador de linha
separador='-'

# Quantidade de colunas para exibição no CLI
colunas=80

# Mensagem de cabecalho
cabecalho="Script: ${programa} v${versao} - ${copyright}\n${repositorio}"

# Mensagem de rodapé
rodape=" Vovolinux: Sem trauma e sem teoria!"

# Distros testadas
distros=(
    'Ubuntu 20.04 LTS'
    'Ubuntu 19.10'
    'Linux Mint 19.3'
    'Linux Mint 19.2'
)

### VARIÁVEIS DO SISTEMA OPERACIONAL ###

# Hardware da máquina (arquitetura) para compor o nome do arquivo_tar_gz
if [[ $(uname -m) = "x86_64" ]]; then
    arquitetura="x64"
else
    arquitetura="i586"
fi


### VARIÁVEIS PARA LINKS WEB ###

# Repositório deste script
repositorio='https://github.com/Viniciusalopes/jdk8-oracle-for-linux'

# Caminho para download dos scripts auxiliares de shell-util
raw_shell_util='https://raw.githubusercontent.com/Viniciusalopes/jdk8-oracle-for-linux/master/shell-util/'

# Link para download do jdk
download='https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html'

### VARIÁVEIS DE DIRETÓRIOS E ARQUIVOS ###

# Diretório para scripts auxiliares e dependências
dir_shell_util='/tmp/shell-util'

# Diretório de instalação
dir_lib_jvm='/usr/lib/jvm'

# Arquivo de instalação do jdk
arquivo_tar_gz="jdk-8u*-linux-${arquitetura}.tar.gz"

# Instruções para download caso não encontre o arquivo 
instruc_download=">> Faça o download manualmente em:\n   ${download}\n>> e salve o arquivo no diretório:\n   '${PWD}/'.\n"

# Arquivo de log
log=''

# Versão do jdk
vjdk=''

# Dependências e scripts auxiliares
sources=('so')

#------------------------------- FIM-VARIÁVEIS --------------------------------<


#-------------------------------- DEPENDÊNCIAS -------------------------------->

# Verifica dependências, faz o download se for o caso, e importa em seguida.
dependencias()
{
    printf %b "Verificando dependências...\n"

    # Cria o diretório temporário para scripts auxiliares se não existir
    if ! [[ -d ${dir_shell_util} ]]; then
        mkdir -v "${dir_shell_util}"
    fi

    # Define a dependência para download
    dep="${dir_shell_util}/${sources[0]}"

    printf %b "> ${dep} -> "

    # Download 
    if [[ -f ${dep} ]]; then
        printf %b "OK\n"
    else
        printf %b "Não encontrada.\n"
        wget -v ${raw_shell_util}/${sources[0]} -O "${dep}"

        # Encerra se não conseguir fazer o download do arquivo
        if [[ $? -ne 0 ]]; then
            rm -rf "${dep}"
            exit 1
        fi
    fi

    # Inclui a dependencia principal
    printf %b "> ${dep} -> "
    source "${dep}"
    printf %b "OK\n"

    # Dependencias de Operações com texto, Menus e específicas para o jdk8
    sources=('texto' 'menu')

    # Inclui demais dependencias de sources()
    get_sources "${dir_shell_util}" "${raw_shell_util}" ""
}

#------------------------------------------------------------------------------|


#----------------------------------- FUNÇÕES ---------------------------------->

# Encerra o script se não estiver sendo executado como r00t.
somente_root()
{
    # é root?
    [[ ${UID} -ne 0 ]] && {  
        printf %b "Execute como r00t.\n"
        exit 1
    }
}

# Oferece uma versão para download pelo terminal
# Step 1:
# Download the latest JDK(jdk-8u241-linux-x64.tar.gz) from this official site.
oferece_download(){

    #link="https://download.oracle.com/otn-pub/java/jdk/8u251-b08/3d5a2bb8f8d4428bbe94aed7ec7ae784/jdk-8u251-linux-x64.tar.gz"
    #link="https://download.oracle.com/otn-pub/java/jdk/8u251-b08/3d5a2bb8f8d4428bbe94aed7ec7ae784/jdk-8u251-linux-i586.tar.gz"
    #vinicius@VINICIUS-NB:/tmp$ rm jdk-8u251-linux-x64.tar.gz 
    #vinicius@VINICIUS-NB:/tmp$ wget -c --header "Cookie: oraclelicense=accept-securebackup-cookie" ${link}
    
    local _vjdk='251'
    local _url='https://download.oracle.com/otn-pub/java/jdk/8u251-b08'
    local _key='3d5a2bb8f8d4428bbe94aed7ec7ae784'
    local _arquivos=(
        "jdk-8u${_vjdk}-linux-x64.tar.gz"
        "jdk-8u${_vjdk}-linux-i586.tar.gz"
    )
                          
    local texto="Este programa pode fazer o download do arquivo 'jdk-8u${_vjdk}-linux-${arquitetura}.tar.gz'\n"
    local texto="${texto}Deseja fazer o download automaGicamente?"
    if [[ $(pergunta_sn ${texto}) -eq 1 ]]; then
        "Ouquei...\n${instruc_download}\n"
        sessao_texto "${separador}" "${colunas}" "${cabecalho}"
        exit 1
    else
        exit 1
    fi

}


# Extrai o arquivo_tar_gz
# Step 2:
# sudo mkdir /usr/lib/jvm
# 
# Step 3:
# Enter the following command to change the directory.
# 
# Step 4:
# Extract the jdk-8u*-linux-*.tar.gz file in that directory.
extrai_arquivo()
{
    # Atualiza o nome do arquivo de log
    log="/var/log/install-jdk_${versao}_${autor}_(date_format Ymd_HMS).log"

    # Cria o diretório
    if [[ -e "./${arquivo_tar_gz}" ]]; then
        # Step 3:
        # Enter the following command to change the directory.
        printf %b ">> Criando diretório jvm...\n"
        if ! [[ -e "${dir_lib_jvm}" ]]; then
            mkdir -v "${dir_lib_jvm}"
        fi
        # Extrai para o diretório criado e grava no log
        # Step 4:
        # Extract the jdk-8u*-linux-*.tar.gz file in that directory.
        printf %b "$(separa "${separador}" "${colunas}")\n>> Extraindo '$arquivo_tar_gz...'\nLOG da extração: $log\n"
        sessao_texto "${separador}" "${colunas}" "${cabecalho}" >> $log
        printf %b "$(date_format Y-m-d_H:M:S) - Iniciando extração do arquivo $arquivo_tar_gz\n"  >> $log
        tar -xvzf ${arquivo_tar_gz} -C ${dir_lib_jvm} >> $log
        printf %b "$(date_format Y-m-d_H:M:S) Fim.\n" >> $log
    fi
}

 # Atualiza /etc/environment
Step 5:
Enter the following command to open the environment variables file.

Step 6:
In the opened file, add the following bin folders to the existing PATH variable.

atualiza_env()
{
    # Backup de /etc/environment
    printf %b "$(separa "${separador}" "${colunas}")\n"
    cp -v /etc/environment /etc/environment_$(date_format Ymd_HMS)_bkp

    # Paths que serão incluídos
    local paths=(
        ":${dir_lib_jvm}/${vjdk}/bin"
        ":${dir_lib_jvm}/${vjdk}/db/bin"
        ":${dir_lib_jvm}/${vjdk}/jre/bin"
    )


    # Edita o PATH de environment
    cat << EOF > /etc/environment
# UPDATE BY Vovolinux <${repositorio}>
# DATA: $(date_format Y-m-d_H:M:S)
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:${dir_lib_jvm}/${vjdk}/bin:${dir_lib_jvm}/${vjdk}/db/bin:${dir_lib_jvm}/${vjdk}/jre/bin"
J2SDKDIR="${dir_lib_jvm}/${vjdk}"
J2REDIR="${dir_lib_jvm}/${vjdk}/jre"
JAVA_HOME="${dir_lib_jvm}/${vjdk}"
DERBY_HOME="${dir_lib_jvm}/${vjdk}/db"
EOF
}

# install, set e list, para informar o sistema sobre a localização do Java. 
# Step 7:
# Enter the following commands to inform the system about the Java's location. Depending on your JDK version, the paths can be different.
#
# Step 8:
# To verify the setup enter the following commands and make sure that they print the location of java and javac as you have provided in the previous step.
update_alternatives()
{
    # Comandos no terminal:
    printf %b "$(separa "${separador}" "${colunas}")\n"
    update-alternatives --install "/usr/bin/java" "java" "${dir_lib_jvm}/${vjdk}/bin/java" 0
    update-alternatives --set java ${dir_lib_jvm}/${vjdk}/bin/java
    update-alternatives --list java
    update-alternatives --install "/usr/bin/javac" "javac" "${dir_lib_jvm}/${vjdk}/bin/javac" 0
    update-alternatives --set javac ${dir_lib_jvm}/${vjdk}/bin/javac
    update-alternatives --list javac
    printf %b "\n"
}

mensagem_final()
{
    cat << EOF
$(separa "${separador}" "${colunas}")
A instalação terminou.
Caso o seu Netbeans já esteja instalado, atualize  valor de 'netbeans_jdkhome'
no arquivo '~/netbeans-v.v/etc/netbeans.conf'.

Exemplo:
    netbeans_jdkhome="${dir_lib_jvm}/${vjdk}"
$(separa "${separador}" "${colunas}")
sessao_texto "${separador}" "${colunas}" "${rodape}"

EOF
}

#--------------------------------- FIM-FUNÇÕES --------------------------------<

# Programa começa aqui :)
printf %b "\n"

# Encerra se não for r00t
somente_root

# Verifica dependências
dependencias

# Imprime o cabeçalho
sessao_texto "${separador}" "${colunas}" "${cabecalho}"

# Verifica se o script já foi testado com a distribuição atual
verifica_distro "${dir_shell_util}/menu"

# Verifica se o arquivo está no mesmo diretório do script e atualiza a variável 'arquivo_tar_gz'
arquivo_tar_gz=$(require "${PWD}" "${arquivo_tar_gz}" "${instruc_download}\n${cabecalho}")

# Encerra caso o require não encontre o arquivo_tar_gz na mesma pasta do script
if [[ $? -ne 0 ]]; then
    printf %b "${arquivo_tar_gz}\n"
    exit 1
fi

printf %b "Verificando a versão do jdk8 -> "

# Atualiza a variavel com a versão do jdk baixado
vjdk=$(tar -tzf ${arquivo_tar_gz} | grep jre/LICENSE | cut -d '/' -f1)
printf %b "${vjdk}\n"

# Atualiza a variável do nome do arquivo de log
log="/var/log/tar_xvzf_jdk-8u_$vjdk_$(date_format Ymd_HMS).log"

# Oferece o download automáGico ;)
oferece_download

# Extrai o arquivo tar_gz
extrai_arquivo

# Atualiza /etc/environment
atualiza_env

# Instala, seta e verifica o java.
update_alternatives

# Exibe a versão instalada
java -version

# Exibe a mensagem final (rodapé)
mensagem_final