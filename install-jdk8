#!/usr/bin/env bash
# Template orgulhosamente criado por (Shell-Base)

#-----------HEADER-------------------------------------------------------------|
# AUTOR             : Vovolinux <suporte@vovolinux.com.br>
# HOMEPAGE          : https://vovolinux.com.br 
# DATA-DE-CRIAÇÃO   : 15/12/2019 às 21:07 
# PROGRAMA          : install-jdk8
# VERSÃO            : 1.0.2
# LICENÇA           : MIT - © 2020 - Vovolinux
# PEQUENA-DESCRIÇÃO : Instalação do Java SE Development Kit 8 para Ubuntu
# 
# CHANGELOG :
# 2020-04-26 - v1.0.2 - Vovolinux:
#   - Detecção de arquivos 'jdk-8u*-linux-*.tar.gz' no diretório do script.
#   - Detecção automáGica da versão do JDK a ser instalado.
#   - Incluída a opção de continuar mesmo que este script ainda não tenha
#     sido testado com a distribuição atual.
#   - Modularização de funções com o projeto 'shell-util'
#     <https://github.com/Viniciusalopes/shell-util>
#
# 2019-12-15 - v1.0.1 - Vovolinux:
#   - Melhoria de comentários e aproveitamento de variáveis.
#   - Substituição de 'echo' por 'printf' e 'cat << EOF'.
#
#------------------------------------------------------------------------------|


#--------------------------------- VARIÁVEIS ---------------------------------->

# Versão deste script
versao='1.0.2'

# Repositório deste script
repositorio='https://github.com/Viniciusalopes/jdk8-oracle-for-linux'

# Informação de Copyryght
copyright='© 2020 - Vovolinux'

# Separador de texto
separador='-'

# Quantidade de colunas do texto exibido
colunas=80

# Data atual
data_bkp=$(date "+%Y%m%d_%H%M%S")
data_log=$(date "+%Y-%m-%d_%H:%M:%S")

# Arquivos auxiliares
sources=('Texto' 'So')

# Nome da distribuição
distro=''
repo_shell_util='https://github.com/Viniciusalopes/jdk8-oracle-for-linux'
dir_shell_util='shell-util'

# Diretório de instalação
dir_lib_jvm='/usr/lib/jvm'

# Arquivo de log
log=''

# Arquivo de instalação
arquivo_tar_gz='jdk-8u*-linux-*.tar.gz'

# Versão do jdk
vjdk=''

# Link para download do jdk
download='https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html'

set_distros()
{
    # Distros testadas
    distros=(
        'Ubuntu 20.04 LTS'
        'Ubuntu 19.10'
        'Linux Mint 19.3'
        'Linux Mint 19.2'
        )
}
#------------------------------- FIM-VARIÁVEIS --------------------------------<


#---------------------------------- SOURCES ----------------------------------->
get_sources()
{
    # Cria o diretório temporário para scripts auxiliares se não existir
    ! [[ -d $dir_shell_util ]] && mkdir -v $dir_shell_util

    for s in "${sources[@]}"; do
        if ! [[ -f "$dir_shell_util/$s" ]]; then
            printf %b "$dir_shell_util/$s\n"
            wget -v ${repo_shell_util}${s} -O "$dir_shell_util/$s"
        fi
        source $dir_shell_util/$s
    done
}
#------------------------------------------------------------------------------|


#----------------------------------- FUNÇÕES ---------------------------------->

# Mensagem de cabecalho
cabecalho()
{
    cat << EOF
$(separa)
Script: install-jdk8 v${versao} (${copyright})
${repositorio}
$(separa)
EOF
}

# Extrai o arquivo
extrai_arquivo()
{
    # Cria o diretório
    if [[ -e "./${arquivo}" ]]; then
        printf %b ">> Criando diretório jvm...\n"
        if ! [[ -e ${dir_lib_jvm} ]]; then
            mkdir -v ${dir_lib_jvm}
        fi

        # Extrai para o diretório criado
        printf %b "${separa}\n>> Extraindo '$arquivo...'\nLOG da extração: $log\n"
        cabecalho >> $log
        printf %b "$data_log - Iniciando extração do arquivo $arquivo\n"  >> $log
        tar -xvzf ${arquivo} -C ${dir_lib_jvm} >> $log
        printf %b "$data_log Fim.\n" >> $log
    fi
}

 # Atualiza /etc/environment
atualiza_env()
{
    # Backup de environment
    printf %b "${separa}\n"
    cp -v /etc/environment /etc/environment_${data_bkp}_bkp

    # Edita o PATH de environment
    cat << EOF > /etc/environment
# UPDATE BY Vovolinux <https://github.com/Viniciusalopes/jdk-8u241-oracle-to-ubuntu>
# DATA: ${data_log}
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:${dir_lib_jvm}/${vjdk}/bin:${dir_lib_jvm}/${vjdk}/db/bin:${dir_lib_jvm}/${vjdk}/jre/bin"
J2SDKDIR="${dir_lib_jvm}/${vjdk}"
J2REDIR="${dir_lib_jvm}/${vjdk}/jre"
JAVA_HOME="${dir_lib_jvm}/${vjdk}"
DERBY_HOME="${dir_lib_jvm}/${vjdk}/db"
EOF
}

# Update e set
update()
{
    # Comandos no terminal:
    printf %b "${separa}\n"
    update-alternatives --install "/usr/bin/java" "java" "${dir_lib_jvm}/${vjdk}/bin/java" 0
    update-alternatives --set java ${dir_lib_jvm}/${vjdk}/bin/java
    update-alternatives --list java
    update-alternatives --install "/usr/bin/javac" "javac" "${dir_lib_jvm}/${vjdk}/bin/javac" 0
    update-alternatives --set javac ${dir_lib_jvm}/${vjdk}/bin/javac
    update-alternatives --list javac
}

mensagem_final()
{
    cat << EOF
$separa
A instalação terminou.
Caso o seu Netbeans já esteja instalado, atualize  valor de 'netbeans_jdkhome'
no arquivo '~/netbeans-v.v/etc/netbeans.conf'.

Exemplo:
netbeans_jdkhome="${dir_lib_jvm}/${vjdk}"
$separa
Vovolinux: Sem trauma e sem teoria!

EOF
}

#--------------------------------- FIM-FUNÇÕES --------------------------------<


# Obtém sources
get_sources

# Programa começa aqui :)
cabecalho

# Encerra se não for r00t
#somente_root

# Atualiza a lista de distros testadas
#set_distros

# Verifica se o script já foi testado com a distribuição atual
#verifica_distro

# Verifica se o arquivo está no mesmo diretório do script e atualiza a variável 'arquivo_tar_gz'
#arquivo_tar_gz=$(require ${PWD} ${arquivo_tar_gz} ${download})

# Atualiza a variavel com a versão do jdk baixado
#vjdk=$(tar -tzf ${arquivo_tar_gz} | grep jre/LICENSE | cut -d '/' -f1)

# Atualiza a variável do nome do arquivo de log
#log="/var/log/tar_xvzf_jdk-8u_$($vjdk | cut -d '_' -f2).log"

#extrai_arquivo
#atualiza_env
#update

# Exibe a versão instalada
java -version

mensagem_final
